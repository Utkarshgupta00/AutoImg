import React, {useState} from 'react'
import { useNavigate } from 'react-router-dom'

import { preview } from '../assets'
import {getRandomPrompt} from '../utils'
import { FormField, Loader } from '../Components'

const CreatePost = () => {
  const navigate = useNavigate();
  const [form, setForm] = useState({
    name:'',
    prompt:'',
    photo:''
  })

  const[generatingImg,setGeneratingImg] = useState(false);
  const[loading,setLoading] = useState(false);



  const handleChange = (e) =>{
    setForm({ ...form, [e.target.name]: e.target.value})
  }

  const handleSurpriseMe = () => {
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt : randomPrompt})
  }

  const generateImage = async() => {
    if(form.prompt){
      try{
        setGeneratingImg(true);
        const response = await fetch('http://localhost:3000/api/v1/autoImg',{
          method : 'POST',
          headers : {
            'Content-Type' : 'application/json',
          },
          body:JSON.stringify({prompt : form.prompt}),
        })

        const data = await response.json();
        setForm({...form, photo:`data:image/jpeg;base64,${data.photo}`})

      }
      catch(error){
        alert(error);
      }
      finally{
        setGeneratingImg(false);
      }
    }
    else{
      alert("Please enter a prompt");
    }
  }

  const handleSubmit = async(e) =>{
    e.preventDefault();
    if(form.prompt && form.photo){
      setLoading(true);

      try{
        const response = await fetch('http://localhost:3000/api/v1/post',{
          method : 'POST',
          headers : {
            'Content-Type' : 'application/json',
          },
          body : JSON.stringify(form),
        })

        await response.json();
        navigate('/');

      }catch(err){
        alert(err);
                
      }finally{
        setLoading(false);


      }

    }

    else{
      alert("enter a prompt in the prompt field");
    }

  }

  return (
    <section className='max-w-7xl mx-auto ' >
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>Create</h1>
      </div>
      <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px] ">
        Create imaginative and visually stunning images generated by AutoImage
      </p>

      <form className='mt-16 max-w-3xl' onSubmit={handleSubmit}>
        <div className="flex flex-col gap-5">
          <FormField
            labelName="your Name"
            type="text"
            name="name"
            placeholder="utkarsh"
            value={form.name}
            handleChange={handleChange}
          />

          <FormField
            labelName="prompt"
            type="text"
            name="prompt"
            placeholder="a macro 35mm photograph of two mice in Hawaii, they're each wearing tiny swimsuits and are carrying tiny surf boards, digital art"
            value={form.prompt}
            handleChange={handleChange}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />

          <div className="relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center">
            {
              form.photo ? (
                <img src={form.photo} alt={form.prompt}
                className='w-full h-full object-contain'
                />
              ):(
                <img src={preview} alt="preview"
                className='w-9/12 h-9/12 object-contain opacity-40'
                />
              )
            }

            {generatingImg && (
              <div
              className="absolute inset-0 z-0 flex
              justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg
              "
              >
                <Loader/>
              </div>
            )}

          </div>


        </div>

        <div className="mt-5 flex gap-5">
          <button type="button" onClick={generateImage}
          className='bg-green-700 px-5 py-2 rounded-lg text-white hover:bg-green-800 font-semibold uppercase w-full'
          >
            {generatingImg ? 'generating...' : "Generate"}
          </button>

        </div>
        <div className="mt-10">
          <p className='mt-2 text-grey-100 text-[14px]'>
            once you have created the image you want, you can share it with the community
          </p>
          <button type="submit"
            className='mt-5 bg-purple-500 px-5 py-2  text-[10px] rounded-lg text-white hover:bg-black font-semibold uppercase w-full'
          >
            {loading ? 'sharing...' : 'share with community'}
          </button>
        </div>
      </form>

    </section>
  )
}

export default CreatePost